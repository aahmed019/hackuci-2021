[{"C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\index.js":"1","C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\App.js":"2","C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\reportWebVitals.js":"3","C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\contexts\\AuthContext.js":"4","C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\firebaseConfig.js":"5","C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\components\\Login\\Login.js":"6","C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\components\\SignUp\\SignUp.js":"7","C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\components\\Confirmation\\Confirmation.js":"8"},{"size":506,"mtime":1611977099035,"results":"9","hashOfConfig":"10"},{"size":848,"mtime":1611979846793,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609099571213,"results":"12","hashOfConfig":"10"},{"size":1469,"mtime":1611977381840,"results":"13","hashOfConfig":"10"},{"size":1073,"mtime":1611974316082,"results":"14","hashOfConfig":"10"},{"size":3131,"mtime":1611976277961,"results":"15","hashOfConfig":"10"},{"size":4652,"mtime":1611979360388,"results":"16","hashOfConfig":"10"},{"size":964,"mtime":1611979823888,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bss2il",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\index.js",[],"C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\App.js",["36"],"C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\reportWebVitals.js",[],["37","38"],"C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\contexts\\AuthContext.js",[],"C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\firebaseConfig.js",[],"C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\components\\Login\\Login.js",[],"C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\components\\SignUp\\SignUp.js",["39"],"import React, {useEffect, useRef, useState}from 'react'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { Container } from 'react-bootstrap';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport Fire from '../../firebaseConfig';\r\n\r\n\r\nexport default function SignUp(){\r\n        const emailRef = useRef();\r\n        const userRef = useRef();\r\n        const nameRef = useRef();\r\n        const passwordRef = useRef();\r\n        const passwordConfirmRef = useRef();\r\n        const {signup} = useAuth();\r\n        const [error, setError] = useState('');\r\n        const [loading, setLoading] = useState(false);\r\n        const history = useHistory();\r\n        let db = Fire.db;\r\n\r\n        useEffect(()=>{},[error]);\r\n\r\n        async function handleSubmit(e){\r\n            e.preventDefault()\r\n            if(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n                return setError('passwords do not match')\r\n            }\r\n                setError('');\r\n                setLoading(true);\r\n\r\n                await signup(emailRef.current.value, passwordRef.current.value).then(response =>{\r\n\r\n                    db.getCollection('SignUp').doc(emailRef.current.value).set({\r\n                        username: userRef.current.value,\r\n                        password: passwordRef.current.value,\r\n                        name: nameRef.current.value,\r\n                        email: emailRef.current.value,\r\n                        orderHistory: [],\r\n                        }).then(() => {\r\n                            console.log('Sign up Successful !');\r\n                        })\r\n                        .catch(error => {                           \r\n                            console.error(\"Error writing document: \", error);\r\n                            setError(error)\r\n                            \r\n                        });\r\n\r\n                }).catch(error=> {\r\n                    console.log(error.message);\r\n                    //setError({error: error});\r\n                });\r\n               // history.push('/Confirmation')\r\n            setLoading(false)\r\n        }\r\n    return(\r\n        <Container className = \"d-flex align-items-center justify-content-center\" style ={{minHeight: \"100vh\"}}>\r\n          <div className =\"w-100\" style = {{ maxWidth: '400px'}}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className = \"text-center mb-4\">Sign Up</h2>\r\n                        {error && <Alert variant =\"danger\">{error}</Alert>}\r\n                    <Form onSubmit ={handleSubmit}>\r\n                        <Form.Group id = \"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type = \"email\" ref={emailRef} required/>                 \r\n                        </Form.Group>\r\n                        <Form.Group id = \"user\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type = \"text\" ref={userRef} required/>                 \r\n                        </Form.Group>\r\n                        <Form.Group id = \"Name\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control type = \"text\" ref={nameRef} required/>                 \r\n                        </Form.Group>\r\n                        <Form.Group id = \"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type = \"password\" ref={passwordRef} required/>                 \r\n                        </Form.Group>\r\n                        <Form.Group id = \"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type = \"password\" ref={passwordConfirmRef} required/>                   \r\n                        </Form.Group>\r\n                        {/* <Form.Group id = \"name-confirm\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type = \"text\" ref={nameRef} required/>                 \r\n                        </Form.Group> */}\r\n                        <Button className = \"w-100\" type = \"submit\" disabled={loading}>\r\n                            Sign Up\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? Go back to <Link to =\"./Login\">Login</Link>\r\n            </div>\r\n            </div>\r\n        </Container>\r\n        \r\n    );\r\n}","C:\\Users\\PZH\\Desktop\\hackuci-2021\\src\\components\\Confirmation\\Confirmation.js",[],{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"40","severity":1,"message":"48","line":18,"column":15,"nodeType":"42","messageId":"43","endLine":18,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]